'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _wepyUrlencode = require('./../npm/wepy-urlencode/lib/index.js');

var md5 = require('./md5.min.js');
var getSource = function getSource() {
  var source = 'other';
  if (window) {
    var href = window.location.href;
    href = 'market.ppkao.com';
    if (href.search(/h5.ppkao.com/) > -1) {
      source = href.search(/v2/) > -1 ? 'H5v2' : 'H5';
    } else if (href.search(/[u|market|dls].ppkao.com/) > -1) {
      source = 'api_pc';
    }
  }
  return source;
};
var SortUrl = function SortUrl(url, reg) {
  if (url.search(/source/gi) === -1) {
    url += '&source=' + getSource();
  }
  if (reg) {
    url = url.replace(/data.api.ppkao/, 'api.ppkao').replace(/\?&/, '?');
  } else {
    url = url.replace(/\s+/g, '').replace(/data.api.ppkao/, 'api.ppkao').replace(/\?&/, '?');
  }
  var arr = url.substring(url.lastIndexOf('?') + 1, url.length).split('&');

  var len = arr.length;
  for (var i = 0; i < len; i++) {
    if (!arr[i].split('=')[1]) {
      arr.splice(i, 1);
      i = i - 1;
      len = len - 1;
    }
  }
  arr.sort();

  var str = '';
  for (var i = 0; i < arr.length; i++) {
    str += arr[i];
  }
  url = url + '&sign=' + md5((0, _wepyUrlencode.urldecode)(str, 'gbk'));
  // console.log(arr, '排序结果',url)
  return url;
};
exports.default = SortUrl;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNvcnQubWluLmpzIl0sIm5hbWVzIjpbIm1kNSIsInJlcXVpcmUiLCJnZXRTb3VyY2UiLCJzb3VyY2UiLCJ3aW5kb3ciLCJocmVmIiwibG9jYXRpb24iLCJzZWFyY2giLCJTb3J0VXJsIiwidXJsIiwicmVnIiwicmVwbGFjZSIsImFyciIsInN1YnN0cmluZyIsImxhc3RJbmRleE9mIiwibGVuZ3RoIiwic3BsaXQiLCJsZW4iLCJpIiwic3BsaWNlIiwic29ydCIsInN0ciJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7O0FBRUEsSUFBSUEsTUFBTUMsUUFBUSxjQUFSLENBQVY7QUFDQSxJQUFJQyxZQUFZLFNBQVpBLFNBQVksR0FBVztBQUN6QixNQUFJQyxTQUFTLE9BQWI7QUFDQSxNQUFJQyxNQUFKLEVBQVk7QUFDVixRQUFJQyxPQUFPRCxPQUFPRSxRQUFQLENBQWdCRCxJQUEzQjtBQUNBQSxXQUFPLGtCQUFQO0FBQ0EsUUFBSUEsS0FBS0UsTUFBTCxDQUFZLGNBQVosSUFBOEIsQ0FBQyxDQUFuQyxFQUFzQztBQUNwQ0osZUFBU0UsS0FBS0UsTUFBTCxDQUFZLElBQVosSUFBb0IsQ0FBQyxDQUFyQixHQUF5QixNQUF6QixHQUFrQyxJQUEzQztBQUNELEtBRkQsTUFFTyxJQUFJRixLQUFLRSxNQUFMLENBQVksMEJBQVosSUFBMEMsQ0FBQyxDQUEvQyxFQUFrRDtBQUN2REosZUFBUyxRQUFUO0FBQ0Q7QUFDRjtBQUNELFNBQU9BLE1BQVA7QUFDRCxDQVpEO0FBYUEsSUFBSUssVUFBVSxTQUFWQSxPQUFVLENBQVNDLEdBQVQsRUFBY0MsR0FBZCxFQUFtQjtBQUMvQixNQUFJRCxJQUFJRixNQUFKLENBQVcsVUFBWCxNQUEyQixDQUFDLENBQWhDLEVBQW1DO0FBQ2pDRSx3QkFBa0JQLFdBQWxCO0FBQ0Q7QUFDRCxNQUFJUSxHQUFKLEVBQVM7QUFDUEQsVUFBTUEsSUFBSUUsT0FBSixDQUFZLGdCQUFaLEVBQThCLFdBQTlCLEVBQTJDQSxPQUEzQyxDQUFtRCxLQUFuRCxFQUEwRCxHQUExRCxDQUFOO0FBQ0QsR0FGRCxNQUVPO0FBQ0xGLFVBQU1BLElBQ0hFLE9BREcsQ0FDSyxNQURMLEVBQ2EsRUFEYixFQUVIQSxPQUZHLENBRUssZ0JBRkwsRUFFdUIsV0FGdkIsRUFHSEEsT0FIRyxDQUdLLEtBSEwsRUFHWSxHQUhaLENBQU47QUFJRDtBQUNELE1BQUlDLE1BQU1ILElBQUlJLFNBQUosQ0FBY0osSUFBSUssV0FBSixDQUFnQixHQUFoQixJQUF1QixDQUFyQyxFQUF3Q0wsSUFBSU0sTUFBNUMsRUFBb0RDLEtBQXBELENBQTBELEdBQTFELENBQVY7O0FBRUEsTUFBSUMsTUFBTUwsSUFBSUcsTUFBZDtBQUNBLE9BQUssSUFBSUcsSUFBSSxDQUFiLEVBQWdCQSxJQUFJRCxHQUFwQixFQUF5QkMsR0FBekIsRUFBOEI7QUFDNUIsUUFBSSxDQUFDTixJQUFJTSxDQUFKLEVBQU9GLEtBQVAsQ0FBYSxHQUFiLEVBQWtCLENBQWxCLENBQUwsRUFBMkI7QUFDekJKLFVBQUlPLE1BQUosQ0FBV0QsQ0FBWCxFQUFjLENBQWQ7QUFDQUEsVUFBSUEsSUFBSSxDQUFSO0FBQ0FELFlBQU1BLE1BQU0sQ0FBWjtBQUNEO0FBQ0Y7QUFDREwsTUFBSVEsSUFBSjs7QUFFQSxNQUFJQyxNQUFNLEVBQVY7QUFDQSxPQUFLLElBQUlILElBQUksQ0FBYixFQUFnQkEsSUFBSU4sSUFBSUcsTUFBeEIsRUFBZ0NHLEdBQWhDLEVBQXFDO0FBQ25DRyxXQUFPVCxJQUFJTSxDQUFKLENBQVA7QUFDRDtBQUNEVCxRQUFTQSxHQUFULGNBQXFCVCxJQUFJLDhCQUFVcUIsR0FBVixFQUFlLEtBQWYsQ0FBSixDQUFyQjtBQUNBO0FBQ0EsU0FBT1osR0FBUDtBQUNELENBL0JEO2tCQWdDZUQsTyIsImZpbGUiOiJzb3J0Lm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVybGRlY29kZSB9IGZyb20gJ3dlcHktdXJsZW5jb2RlJztcclxuXHJcbnZhciBtZDUgPSByZXF1aXJlKCcuL21kNS5taW4uanMnKTtcclxudmFyIGdldFNvdXJjZSA9IGZ1bmN0aW9uKCkge1xyXG4gIGxldCBzb3VyY2UgPSAnb3RoZXInO1xyXG4gIGlmICh3aW5kb3cpIHtcclxuICAgIGxldCBocmVmID0gd2luZG93LmxvY2F0aW9uLmhyZWY7XHJcbiAgICBocmVmID0gJ21hcmtldC5wcGthby5jb20nO1xyXG4gICAgaWYgKGhyZWYuc2VhcmNoKC9oNS5wcGthby5jb20vKSA+IC0xKSB7XHJcbiAgICAgIHNvdXJjZSA9IGhyZWYuc2VhcmNoKC92Mi8pID4gLTEgPyAnSDV2MicgOiAnSDUnO1xyXG4gICAgfSBlbHNlIGlmIChocmVmLnNlYXJjaCgvW3V8bWFya2V0fGRsc10ucHBrYW8uY29tLykgPiAtMSkge1xyXG4gICAgICBzb3VyY2UgPSAnYXBpX3BjJztcclxuICAgIH1cclxuICB9XHJcbiAgcmV0dXJuIHNvdXJjZTtcclxufTtcclxudmFyIFNvcnRVcmwgPSBmdW5jdGlvbih1cmwsIHJlZykge1xyXG4gIGlmICh1cmwuc2VhcmNoKC9zb3VyY2UvZ2kpID09PSAtMSkge1xyXG4gICAgdXJsICs9IGAmc291cmNlPSR7Z2V0U291cmNlKCl9YDtcclxuICB9XHJcbiAgaWYgKHJlZykge1xyXG4gICAgdXJsID0gdXJsLnJlcGxhY2UoL2RhdGEuYXBpLnBwa2FvLywgJ2FwaS5wcGthbycpLnJlcGxhY2UoL1xcPyYvLCAnPycpO1xyXG4gIH0gZWxzZSB7XHJcbiAgICB1cmwgPSB1cmxcclxuICAgICAgLnJlcGxhY2UoL1xccysvZywgJycpXHJcbiAgICAgIC5yZXBsYWNlKC9kYXRhLmFwaS5wcGthby8sICdhcGkucHBrYW8nKVxyXG4gICAgICAucmVwbGFjZSgvXFw/Ji8sICc/Jyk7XHJcbiAgfVxyXG4gIHZhciBhcnIgPSB1cmwuc3Vic3RyaW5nKHVybC5sYXN0SW5kZXhPZignPycpICsgMSwgdXJsLmxlbmd0aCkuc3BsaXQoJyYnKTtcclxuXHJcbiAgdmFyIGxlbiA9IGFyci5sZW5ndGg7XHJcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47IGkrKykge1xyXG4gICAgaWYgKCFhcnJbaV0uc3BsaXQoJz0nKVsxXSkge1xyXG4gICAgICBhcnIuc3BsaWNlKGksIDEpO1xyXG4gICAgICBpID0gaSAtIDE7XHJcbiAgICAgIGxlbiA9IGxlbiAtIDE7XHJcbiAgICB9XHJcbiAgfVxyXG4gIGFyci5zb3J0KCk7XHJcblxyXG4gIHZhciBzdHIgPSAnJztcclxuICBmb3IgKHZhciBpID0gMDsgaSA8IGFyci5sZW5ndGg7IGkrKykge1xyXG4gICAgc3RyICs9IGFycltpXTtcclxuICB9XHJcbiAgdXJsID0gYCR7dXJsfSZzaWduPSR7bWQ1KHVybGRlY29kZShzdHIsICdnYmsnKSl9YDtcclxuICAvLyBjb25zb2xlLmxvZyhhcnIsICfmjpLluo/nu5PmnpwnLHVybClcclxuICByZXR1cm4gdXJsO1xyXG59O1xyXG5leHBvcnQgZGVmYXVsdCBTb3J0VXJsO1xyXG4iXX0=